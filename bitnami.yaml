# postgresql:
#   enabled: false
#   auth:
#     # this does not read from a secret.  not sure how to map
#     # just manually make the same
#     username: "kyoo_back"
#     database: "{{ .Values.global.postgres.database }}"
#     existingSecret: "{{ .Values.global.postgres.infra.existingSecret }}"
#     secretKeys:
#       adminPasswordKey: "{{ .Values.global.postgres.infra.passwordKey }}"
#       userPasswordKey: "{{ .Values.global.postgres.infra.passwordKey }}"
#   primary:
#     persistence:
#       size: 3Gi


### TEST
    # scripts:
    #   initdb.sql: |
    #     CREATE USER kyoo_back WITH PASSWORD 'password1';
    #     CREATE DATABASE kyoo_back;
    #     GRANT ALL PRIVILEGES ON DATABASE kyoo_back TO kyoo_back;


# helm template bitnami/postgresql -f bitnami.yaml

auth:
  username: "kyoo_all"
  password: "password1"
primary:
  initdb:
    scripts:
      kyoo_back.sql: |
        CREATE DATABASE kyoo_back WITH OWNER kyoo_all;
        \connect kyoo_back;
        CREATE SCHEMA IF NOT EXISTS data AUTHORIZATION kyoo_all;
      kyoo_transcoder.sql: |
        CREATE DATABASE kyoo_transcoder WITH OWNER kyoo_all;
        \connect kyoo_transcoder;
        REVOKE ALL ON SCHEMA public FROM PUBLIC;
        CREATE SCHEMA IF NOT EXISTS data AUTHORIZATION kyoo_all;
      user.sql: |
        ALTER ROLE kyoo_all IN DATABASE kyoo_back SET search_path TO "$user", public;
        ALTER ROLE kyoo_all IN DATABASE kyoo_transcoder SET search_path TO "$user", data;